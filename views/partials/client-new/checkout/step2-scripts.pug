script#widget-wfp-script(language='javascript' type='text/javascript' src='https://secure.wayforpay.com/server/pay-widget.js')

script.
    var step = '1';

script.
    // Курс гривны к доллару
    var USDRateUAH = ("#{USDRateUAH}" && parseFloat("#{USDRateUAH}")) || 28;
    // Курс евро к доллару
    var USDRateEUR = ("#{USDRateEUR}" && parseFloat("#{USDRateEUR}")) || 0.89;

script(src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js")
script.
    function payTinkoff () {
        var merchant = "#{merchantID || ''}";
        var sumDef = parseFloat("#{productPrice}");
        var sumUpd = parseFloat("#{productPrice}");
        var currDef = "#{currency.toUpperCase()}";
        var currUpd = "#{currency.toUpperCase()}";

        var USDRateUAH = parseFloat("#{USDRateUAH}");
        var USDRateEUR = parseFloat("#{USDRateEUR}");

        if (!merchant || (merchant === "null") || (merchant === "undefined") || (merchant === "")) {
            merchant = "#{merchantUAH}";
        }
        if (currDef === "USD") {
            currUpd = "UAH";
            sumUpd = (sumDef * USDRateUAH).toFixed(2);
        } else if (currDef === "EUR") {
            currUpd = "UAH";
            sumUpd = ((sumDef / USDRateEUR) * USDRateUAH).toFixed(2);
        } else if (currDef === "UAH") {
            currUpd = "UAH";
            sumUpd = sumDef;
        }

        var data = {
            amount: sumUpd,
            currency: getParameterByName("currency") || "",
            items: [
                {
                    name: getParameterByName("productName"),
                    price: sumUpd,
                    quantity: 1
                }
            ],
            productID: getParameterByName("productID"),
            productName: getParameterByName("productName"),
            description: "Покупка продукта " + getParameterByName("productName"),
        };

        if ("#{salesOrderID}") {
            data.salesOrderID = "#{salesOrderID}";

            axios({
                method: "post",
                url: "/tinkoff/order",
                data: data
            }).then(function (response) {
                if (response && response.data && response.data.result) {
                    tinkoff.create({
                        sum: sumUpd,
                        shopId: "dd44bc8c-fcf0-4ed0-88e3-d3b1efad2635",
                        showcaseId: "df2220a8-2000-48fd-9e9e-4b439640bc1a",
                        orderNumber: response.data.internal_order_id,
                        webhookURL: document.location.origin + "/tinkoff/callback",
                        successURL: document.location.origin + "/payment-success",
                        failURL: document.location.origin + "/payment-failure",
                        items: [
                            {
                                name: getParameterByName("productName"),
                                price: sumUpd,
                                quantity: 1
                            }
                        ]
                    }, { view: "self" });
                } else {
                    alert("Ошибка при создании заказа");
                }
            });
        } else {
            var dealIDPay = getCookie("dealIDPay") || null;
            var contactID = getCookie("contactID") || null;

            var data2 = {
                "First_Name": "#{firstName}",
                "Email": "#{email}",
                "Phone": "#{phone}",
                "productName": "#{productName}",
                "productID": "#{productID}",
                "productPrice": "#{productPrice}",
                "currency": "#{currency.toUpperCase()}",
                "contactID": contactID,
                "dealID": dealIDPay,
                "Payment_Sys": "Банковская рассрочка",
                "type_rassrochka": "Тинькофф"
            };

            axios({
                method: "post",
                url: "/sales_order",
                data: data2
            })
                .then(function (response) {
                    data.salesOrderID = response && response.data ? response.data.salesOrderID : null;

                    axios({
                        method: "post",
                        url: "/tinkoff/order",
                        data: data
                    }).then(function (response) {
                        if (response && response.data && response.data.result) {
                            tinkoff.create({
                                sum: sumUpd,
                                shopId: "dd44bc8c-fcf0-4ed0-88e3-d3b1efad2635",
                                showcaseId: "df2220a8-2000-48fd-9e9e-4b439640bc1a",
                                orderNumber: response.data.internal_order_id,
                                webhookURL: document.location.origin + "/tinkoff/callback",
                                successURL: document.location.origin + "/payment-success",
                                failURL: document.location.origin + "/payment-failure",
                                items: [
                                    {
                                        name: getParameterByName("productName"),
                                        price: sumUpd,
                                        quantity: 1
                                    }
                                ]
                            }, { view: "self" });
                        } else {
                            alert("Ошибка при создании заказа");
                        }
                    });
                });
        }
    }

    //- function payFondy() {
    //-     var url = "/checkout/2/fondy/currencies?email=#{email}&firstName=#{firstName}&productName=#{productName}&productPrice=#{productPrice}&currency=#{currency.toUpperCase()}&merchantID=#{merchantID}&phone=#{phone}&productID=#{productID}";
    //-     if ("#{convertationHide}" === "true") {
    //-         url += "&convertationHide=true";
    //-     }

    //-     if ("#{successLink}") {
    //-         url += "&successLink=#{successLink}";
    //-     }

    //-     if ("#{salesOrderID}") {
    //-         url += "&salesOrderID=#{salesOrderID}";
    //-     }

    //-     if ("#{lang}") {
    //-         url += "&lang=#{lang}";
    //-     }

    //-     window.location = url;
    //- }

    function payFrisbee(curr) {
        var merchant = "#{merchantID || ''}";
        var sumDef = parseFloat("#{productPrice}");
        var sumUpd = parseFloat("#{productPrice}");
        var currDef = "#{currency.toUpperCase()}";
        var currUpd = "#{currency.toUpperCase()}";

        var USDRateUAH = parseFloat("#{USDRateUAH}");
        var USDRateEUR = parseFloat("#{USDRateEUR}");

        if (!merchant || (merchant === "null") || (merchant === "undefined") || (merchant === "")) {
            merchant = "#{merchantUAH}";
        }
        if (currDef === "USD") {
            currUpd = "UAH";
            sumUpd = (sumDef * USDRateUAH).toFixed(2);
        } else if (currDef === "EUR") {
            currUpd = "UAH";
            sumUpd = ((sumDef / USDRateEUR) * USDRateUAH).toFixed(2);
        } else if (currDef === "UAH") {
            currUpd = "UAH";
            sumUpd = sumDef;
        }

        $("#preloader").show();

        if ("#{salesOrderID}") {
            var data = {
                Email             : "#{email}",
                salesOrderID      : "#{salesOrderID}",
                productName       : "#{productName}",
                productPrice      : sumUpd,
                currency          : currUpd,
                redirectURL       : "#{redirectURL}",
                paymentDescription: 'Оплата продукта "#{productName}"',
                merchantID        : merchant || null,
                successLink       : "#{successLink}" || "",
                lang              : "#{lang}" || "ua"
            };

            axios({
                method: "post",
                url   : "/frisbee/payment",
                data  : data
            })
                .then(function (response) {
                    $("#preloader").hide();

                    if (response.data.result && response.data.link) {
                        window.location = response.data.link;
                    } else if (response.data.error) {
                        console.error(response.data.error);
                    }
                });
        } else {
            var dealIDPay = getCookie("dealIDPay") || null;
            var contactID = getCookie("contactID") || null;

            var data2 = {
                "First_Name"  : "#{firstName}",
                "Email"       : "#{email}",
                "Phone"       : "#{phone}",
                "productName" : "#{productName}",
                "productID"   : "#{productID}",
                "productPrice": sumUpd,
                "currency"    : currUpd,
                "contactID"   : contactID,
                "dealID"      : dealIDPay
            };

            axios({
                method: "post",
                url   : "/sales_order",
                data  : data2
            })
                .then(function (response) {
                    if (response && response.data && response.data.salesOrderID) {
                        var salesOrderID = response.data.salesOrderID.toString();

                        var data = {
                            Email             : "#{email}",
                            salesOrderID      : salesOrderID || null,
                            productName       : "#{productName}",
                            productPrice      : sumUpd,
                            currency          : currUpd,
                            redirectURL       : "#{redirectURL}",
                            paymentDescription: 'Оплата продукта "#{productName}"',
                            merchantID        : merchant || null,
                            successLink       : "#{successLink}" || "",
                            lang              : "#{lang}" || "ua"
                        };

                        axios({
                            method: "post",
                            url   : "/frisbee/payment",
                            data  : data
                        })
                            .then(function (response) {
                                $("#preloader").hide();

                                if (response.data.result && response.data.link) {
                                    window.location = response.data.link;
                                } else if (response.data.error) {
                                    console.error(response.data.error);
                                }
                            });
                    } else {
                        console.log(response);
                    }
                });
        }
    }

    function payPayPal() {
        $("#preloader").show();

        if ("#{salesOrderID}") {
            var data = {
                Email             : "#{email}",
                salesOrderID      : "#{salesOrderID}",
                productName       : "#{productName}",
                productPrice      : "#{productPrice}",
                currency          : "#{currency.toUpperCase()}",
                paymentDescription: 'Оплата продукта "#{productName}"',
                redirectURL       : "#{redirectURL}" || null
            };

            axios({
                method: "post",
                // url   : "http://localhost:3001/paypal/payment",
                url   : "/paypal/payment",
                data  : data
            })
                .then(function (response) {
                    $("#preloader").hide();

                    if (response.data.result && response.data.link) {
                        // console.log(response.data.link);
                        window.location = response.data.link;
                    } else if (response.data.error) {
                        console.error(response.data.error);
                    }
                });
        } else {
            var dealIDPay = getCookie("dealIDPay") || null;
            var contactID = getCookie("contactID") || null;

            var data2 = {
                "First_Name"  : "#{firstName}",
                "Email"       : "#{email}",
                "Phone"       : "#{phone}",
                "productName" : "#{productName}",
                "productID"   : "#{productID}",
                "productPrice": "#{productPrice}",
                "currency"    : "#{currency.toUpperCase()}",
                "contactID"   : contactID,
                "dealID"      : dealIDPay
            };

            axios({
                method: "post",
                url   : "/sales_order",
                data  : data2
            })
                .then(function (response) {
                    var salesOrderID = response.data.salesOrderID;

                    var data = {
                        Email             : "#{email}",
                        salesOrderID      : salesOrderID || null,
                        productName       : "#{productName}",
                        productPrice      : "#{productPrice}",
                        currency          : "#{currency.toUpperCase()}",
                        paymentDescription: 'Оплата продукта "#{productName}"',
                        redirectURL       : "#{redirectURL}" || null
                    };

                    axios({
                        method: "post",
                        // url   : "http://localhost:3001/paypal/payment",
                        url   : "/paypal/payment",
                        data  : data
                    })
                        .then(function (response) {
                            $("#preloader").hide();

                            if (response.data.result && response.data.link) {
                                // console.log(response.data.link);
                                window.location = response.data.link;
                            } else if (response.data.error) {
                                console.error(response.data.error);
                            }
                        });
                });
        }
    }

script.
    var header_image = 'bg1.jpg';
    var payment_title = '#{productName}';
    // var product_type = '';
    var mainPrice = "#{productPrice}";
    var currencySym = "$";
    var currency = "#{currency}";
    var subPrice1 = null;
    var subPrice1Curr = null;
    var subPrice2 = null;
    var subPrice2Curr = null;

    var UAHPrice;

    // Calculate all three currencies regardless of selected currency
    var uahPrice, usdPrice, eurPrice;
    
    switch (currency.toLowerCase()) {
        case "usd":
            currencySym = " $";
            uahPrice = Math.ceil(mainPrice * USDRateUAH);
            usdPrice = mainPrice;
            eurPrice = Math.ceil(mainPrice * USDRateEUR);
            break;

        case "uah":
            currencySym = " грн";
            uahPrice = mainPrice;
            usdPrice = Math.ceil(mainPrice / USDRateUAH);
            eurPrice = Math.ceil((mainPrice / USDRateUAH) * USDRateEUR);
            break;

        case "eur":
            currencySym = " €";
            uahPrice = Math.ceil((mainPrice / USDRateEUR) * USDRateUAH);
            usdPrice = Math.ceil(mainPrice / USDRateEUR);
            eurPrice = mainPrice;
            break;
    }

    var tovar_id = 394979;
    var token_GR = 'b7qk';
    var CRM_id = 1203;
    // var success_url = 'https://geniusmarketing.me/syndicate/payment-startup-webinar/step1.php';
    if (step == '0') {
        $('.steps').addClass('zero');
        $('.step1text').fadeIn(0);
        $('.tostep1').addClass('disable_link');
    } else if (step == '1') {
        $('.steps').addClass('first');
        $('.price').removeClass('disapear');
        $('.product').removeClass('disapear');
    } else if (step == '2') {
        $('.steps').addClass('second');
        $('.price').removeClass('disapear');
        $('.product').removeClass('disapear');
    } else if (step == '3') {
        $('.steps').addClass('third');
        $('.success').fadeIn(0);
        $('.success').html('СПАСИБО!');
    } else if (step == '4') {
        $('.steps').addClass('third');
        $('.success').fadeIn(0);
        $('.success').html('ВАШ ЗАКАЗ ОПЛАЧЕН');
    }
    $('#checktoken').val(token_GR);
    //- $('.js_payment_title').html(payment_title);
    
    // Display all three currencies: UAH first, then USD, then EUR
    if ("#{convertationHide}" !== "true") {
        // UAH price (always first)
        $('.js_hrn_price').html(uahPrice + " грн");
        $('.js_hrn_price').addClass('ua-block');
        UAHPrice = uahPrice;
        
        // USD price
        $('.js_dollar_price').html(usdPrice + " $");
        
        // EUR price
        $('.js_eur_price').html(eurPrice + " €");
    } else {
        $('.hrn_price').hide();
        $('.eur_price').hide();
    }
    //}


    $('.js_tovar_id').val(tovar_id);
    $('.sec1').css('background-image', 'url(/img/' + header_image + ')');



    //-- monobank
    $('#showMonbankPopupBtn').click(function () {
        $('.steps-payways').hide();
        $('#installmentModalMonobank').show();
    });

    $('#monobankUpdatePhoneBtn').click(function () {
        $(this).css('opacity', 0);
        $('#monobank_phone').removeAttr('disabled').focus();
    });

    $('#monobank_parts').on('change', function () {
        var parts = parseInt($(this).val());

        $('#monobankPartsText').text(parts);

        var currency = getParameterByName("currency");
        if (currency.toUpperCase() === 'UAH') {
            $('#monobankPartsPrice').text(parseFloat(parseInt(mainPrice, 10) / parts).toFixed(2));
        } else {
            $('#monobankPartsPrice').text(parseFloat(UAHPrice / parts).toFixed(2));
        }
    });

    $(document).ready(function () {
        $("#monobank_name").val(getParameterByName("firstName") || "");
        $("#monobank_email").val(getParameterByName("email") || "");
        $("#monobank_phone").val('+' + getParameterByName("phone").trim() || "");

        var currency = getParameterByName("currency");
        if (currency.toUpperCase() === 'EUR') {
            document.getElementsByClassName('monobank-pay-btn')[0].style.display = "none";
        }

        if (currency.toUpperCase() === 'UAH') {
            $('#monobankPartsPrice').text(parseFloat(parseInt(mainPrice, 10) / 6).toFixed(2));
        } else {
            $('#monobankPartsPrice').text(parseFloat(UAHPrice / 6).toFixed(2));
        }
    });

    $('#monobank_form').submit(function (e) {
        e.preventDefault();

        $("#preloader").show();

        var data = {
            "name"       : document.getElementById("monobank_name").value,
            "email"      : document.getElementById("monobank_email").value,
            "phone"      : document.getElementById("monobank_phone").value.replace(/\s+/g, ''),
            "parts"      : document.getElementById("monobank_parts").value,
            "currency"   : getParameterByName("currency") || "",
            "grUnpaid"   : getParameterByName("grUnpaid") || "",
            "productName": decodeURIComponent(getParameterByName("productName") || ""),
            "productID"  : getParameterByName("productID") || "",
            "price"      : getParameterByName("productPrice") || ""
        };

        //- var phoneRegexp = new RegExp("\\+380\\d{9}\\b");
        //- if (phoneRegexp.test(data.phone)) {
            if ("#{salesOrderID}") {
                data.salesOrderID = "#{salesOrderID}";

                axios({
                    method: "post",
                    url: "/monobank/parts",
                    data: data
                }).then(function (response) {
                    setCookie("monobankCheckoutLink", window.location.href, 365);
                    if (response && response.data && response.data.result && response.data.data) {
                        setCookie("mono_order_id", response.data.order_id);
                        window.location = "/monobank/process";
                    } else {
                        $("#preloader").hide();
                        alert("Произошла неизвестная ошибка");
                    }
                });
            } else {
                var dealIDPay = getCookie("dealIDPay") || null;
                var contactID = getCookie("contactID") || null;

                var data2 = {
                    "First_Name": "#{firstName}",
                    "Email": "#{email}",
                    "Phone": "#{phone}",
                    "productName": decodeURIComponent("#{productName}" || ""),
                    "productID": "#{productID}",
                    "productPrice": "#{productPrice}",
                    "currency": "#{currency.toUpperCase()}",
                    "contactID": contactID,
                    "dealID": dealIDPay,
                    "Payment_Sys": "Банковская рассрочка",
                    "type_rassrochka": "Монобанк",
                    "count_parts": document.getElementById("monobank_parts").value
                };

                axios({
                    method: "post",
                    url: "/sales_order",
                    data: data2
                })
                    .then(function (response) {
                        data.salesOrderID = response && response.data ? response.data.salesOrderID : null;

                        axios({
                            method: "post",
                            url: "/monobank/parts",
                            data: data
                        }).then(function (response) {
                            setCookie("monobankCheckoutLink", window.location.href, 365);
                            if (response && response.data && response.data.result && response.data.data) {
                                setCookie("mono_order_id", response.data.order_id);
                                window.location = "/monobank/process";
                            } else {
                                $("#preloader").hide();
                                alert("Произошла неизвестная ошибка");
                            }
                        });
                    });
            }
        //- } else {
        //-     $("#preloader").hide();
        //-     $('#monobank_phone').removeAttr('disabled').focus();
        //-     $('#monobankUpdatePhoneBtn').css('opacity', 0);
        //-     alert("Формат телефона должен быть +380XXXXXXXXX");
        //- }
    });



    //-- privat
    $('#privat_phone').val(getParameterByName("phone") || "");

    $('#showPrivatPopupBtn').click(function () {
        $('.steps-payways').hide();
        $('#installmentModalPrivat').show();
    });

    $('#privatUpdatePhoneBtn').click(function () {
        $(this).css('opacity', 0);
        $('#privat_phone').removeAttr('disabled').focus();
    });

    $('#privat_parts').on('change', function () {
        var parts = parseInt($(this).val());

        if (parts > 4) {
            $('#privatPartsText').text(parts);
        } else {
            $('#privatPartsText').text(parts);
        }

        var currency = getParameterByName("currency");
        if (currency.toUpperCase() === 'UAH') {
            $('#privatPartsPrice').text(parseFloat(parseInt(mainPrice, 10) / parts).toFixed(2));
        } else {
            $('#privatPartsPrice').text(parseFloat(UAHPrice / parts).toFixed(2));
        }
    });

    $(document).ready(function () {
        $("#privat_name").val(getParameterByName("firstName") || "");
        $("#privat_email").val(getParameterByName("email") || "");
        $("#privat_phone").val('+' + getParameterByName("phone").trim() || "");

        var currency = getParameterByName("currency");
        if (currency.toUpperCase() === 'UAH') {
            $('#privatPartsPrice').text(parseFloat(parseInt(mainPrice, 10) / 6).toFixed(2));
        } else {
            $('#privatPartsPrice').text(parseFloat(UAHPrice / 6).toFixed(2));
        }
    });

    $('#privat_form').submit(function (e) {
        e.preventDefault();

        $("#preloader").show();

        var privatPrice = UAHPrice || ""
        var currency = getParameterByName("currency");
        if (currency && currency.toLowerCase() === "uah") {
            privatPrice = getParameterByName("productPrice");
        }

        var data = {
            "name": document.getElementById("privat_name").value,
            "email": document.getElementById("privat_email").value,
            "phone": document.getElementById("privat_phone").value.replace(/\s+/g, ''),
            "parts": document.getElementById("privat_parts").value,
            "currency": getParameterByName("currency") || "",
            "grUnpaid": getParameterByName("grUnpaid") || "",
            "productName": getParameterByName("productName") || "",
            "productID": getParameterByName("productID") || "",
            "price": privatPrice
        };

        //- var phoneRegexp = new RegExp("\\+380\\d{9}\\b");
        //- if (phoneRegexp.test(data.phone)) {
            if ("#{salesOrderID}") {
                data.salesOrderID = "#{salesOrderID}";

                axios({
                    method: "post",
                    url: "/privatbank/payment",
                    data: data
                }).then(function (response) {
                    if (response.data && response.data.result) {
                        window.location = `https://payparts2.privatbank.ua/ipp/v2/payment?token=${response.data.token}`;
                    } else {
                        console.error("An error has occurred");
                    }
                });
            } else {
                var dealIDPay = getCookie("dealIDPay") || null;
                var contactID = getCookie("contactID") || null;

                var data2 = {
                    "First_Name": "#{firstName}",
                    "Email": "#{email}",
                    "Phone": "#{phone}",
                    "productName": "#{productName}",
                    "productID": "#{productID}",
                    "productPrice": "#{productPrice}",
                    "currency": "#{currency.toUpperCase()}",
                    "contactID": contactID,
                    "dealID": dealIDPay,
                    "Payment_Sys": "Банковская рассрочка",
                    "type_rassrochka": "Приват",
                    "count_parts": document.getElementById("privat_parts").value
                };

                axios({
                    method: "post",
                    url: "/sales_order",
                    data: data2
                })
                    .then(function (response) {
                        data.salesOrderID = response && response.data ? response.data.salesOrderID : null;

                        axios({
                            method: "post",
                            url: "/privatbank/payment",
                            data: data
                        }).then(function (response) {
                            if (response.data && response.data.result) {
                                window.location = `https://payparts2.privatbank.ua/ipp/v2/payment?token=${response.data.token}`;
                            } else {
                                console.error("An error has occurred");
                            }
                        });
                    });
            }
        //- } else {
        //-     $("#preloader").hide();
        //-     $('#privat_phone').removeAttr('disabled').focus();
        //-     $('#privatUpdatePhoneBtn').css('opacity', 0);
        //-     alert("Формат телефона должен быть +380XXXXXXXXX");
        //- }
    });

    function getParameterByName(name) {
        name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
        var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
        var results = regex.exec(location.search);
        return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
    }


//- script(type='text/javascript').
//-     (function (d, w, s) {
//-         var widgetId = '22519',
//-             gcw = d.createElement(s);
//-         gcw.type = 'text/javascript';
//-         gcw.async = true;
//-         gcw.src = '//my.binotel.ua/getcall/widgets/' + widgetId + '.js';
//-         var sn = d.getElementsByTagName(s)[0];
//-         sn.parentNode.insertBefore(gcw, sn);
//-     })(document, window, 'script');

script#ss-gadget(src='https://customer.smartsender.eu/js/client/gd.min.js?v2.0.0' data-target='FJPXlTvX' data-domain='myminismm')


script.
    $("#monobank_phone, #privat_phone").intlTelInput({
        utilsScript       : '/js/utils.js',
        defaultCountry    : 'auto',
        separateDialCode  : false,
        nationalMode      : false,
        preferredCountries: ['ua', 'ru', 'by', 'kz']
    });


script.
    var country = "";

    function getGeolocationData(callback) {
        var requestUrl = "https://ipapi.co/json";

        $.ajax({
            url    : requestUrl,
            type   : 'GET',
            success: function (json) {
                console.log("json", json);
                country = json.country_code;

                callback();
            },
            error  : function (err) {
                console.log("Request failed, error= " + err);
                callback();
            }
        });
    }

    getGeolocationData(function() {
        if (country.toLowerCase() === "ru") {
            $('.ru-block').removeClass('hidden');
        } else if (country.toLowerCase() === "ua") {
            $('.ua-block').removeClass('hidden');
        }
    });


script.
    var curr = "uah";
    //- var curr = getParameterByName("currency").toLowerCase() ;

    //- switch (curr) {
    //-     case "usd":
    //-         $('.steps-payways-card-currency-list__item[data-curr="usd"]').addClass('steps-payways-card-currency-list__item--active')
    //-         break;
    //-     case "uah":
    //-         $('.steps-payways-card-currency-list__item[data-curr="uah"]').addClass('steps-payways-card-currency-list__item--active')
    //-         break;
    //-     case "eur":
    //-         $('.steps-payways-card-currency-list__item[data-curr="eur"]').addClass('steps-payways-card-currency-list__item--active')
    //-         break;
    //- }

    //- $('.steps-payways-card-currency-list__item[data-curr="uah"]').addClass('steps-payways-card-currency-list__item--active')

    $('.steps-payways-card-currency-list__item').click(function() {
        if (!$(this).hasClass('steps-payways-card-currency-list__item--active')) {
            $('.steps-payways-card-currency-list__item--active').removeClass('steps-payways-card-currency-list__item--active');
            $(this).addClass('steps-payways-card-currency-list__item--active');
            curr = $(this).data('curr');

            $('#wfpForm input[name=currency]').val(curr.toUpperCase());

            var sumDef = parseFloat("#{productPrice}");
            var sumUpd = parseFloat("#{productPrice}");
            var currDef = "#{currency.toUpperCase()}";

            switch (curr) {
                case "usd":
                    if (currDef === "USD") {
                        sumUpd = sumDef;
                    } else if (currDef === "EUR") {
                        sumUpd = (sumDef * (1 / USDRateEUR)).toFixed(2);
                    } else if (currDef === "UAH") {
                        sumUpd = (sumDef * (1 / USDRateUAH)).toFixed(2);
                    }
                    break;

                case "eur":
                    if (currDef === "USD") {
                        sumUpd = (sumDef * USDRateEUR).toFixed(2);
                    } else if (currDef === "EUR") {
                        sumUpd = sumDef;
                    } else if (currDef === "UAH") {
                        sumUpd = ((sumDef / USDRateUAH) * USDRateEUR).toFixed(2);
                    }
                    break;

                case "uah":
                    if (currDef === "USD") {
                        sumUpd = (sumDef * USDRateUAH).toFixed(2);
                    } else if (currDef === "EUR") {
                        sumUpd = ((sumDef / USDRateEUR) * USDRateUAH).toFixed(2);
                    } else if (currDef === "UAH") {
                        sumUpd = sumDef;
                    }
                    break;
            }

            $('#wfpForm input[name=amount]').val(sumUpd);
            $('#wfpForm input[name=productPrice]').val(sumUpd);

            generateSignature(() => {});
        }
    });

    $('.steps-payways-card-currency-list__item[data-curr="uah"]').trigger('click');

    function payFondy() {
        var merchant = "#{merchantID || ''}";
        var sumDef = parseFloat("#{productPrice}");
        var sumUpd = parseFloat("#{productPrice}");
        var currDef = "#{currency.toUpperCase()}";
        var currUpd = "#{currency.toUpperCase()}";

        var USDRateUAH = parseFloat("#{USDRateUAH}");
        var USDRateEUR = parseFloat("#{USDRateEUR}");

        switch (curr) {
            case "usd":
                if (!merchant || (merchant === "null") || (merchant === "undefined") || (merchant === "")) {
                    merchant = "#{merchantUSD}";
                }
                if (currDef === "USD") {
                    currUpd = "USD";
                    sumUpd = sumDef;
                } else if (currDef === "EUR") {
                    currUpd = "USD";
                    sumUpd = (sumDef * (1 / USDRateEUR)).toFixed(2);
                } else if (currDef === "UAH") {
                    currUpd = "USD";
                    sumUpd = (sumDef * (1 / USDRateUAH)).toFixed(2);
                }
                break;

            case "eur":
                if (!merchant || (merchant === "null") || (merchant === "undefined") || (merchant === "")) {
                    merchant = "#{merchantEUR}";
                }
                if (currDef === "USD") {
                    currUpd = "EUR";
                    sumUpd = (sumDef * USDRateEUR).toFixed(2);
                } else if (currDef === "EUR") {
                    currUpd = "EUR";
                    sumUpd = sumDef;
                } else if (currDef === "UAH") {
                    currUpd = "EUR";
                    sumUpd = ((sumDef / USDRateUAH) * USDRateEUR).toFixed(2);
                }
                break;

            case "uah":
                if (!merchant || (merchant === "null") || (merchant === "undefined") || (merchant === "")) {
                    merchant = "#{merchantUAH}";
                }
                if (currDef === "USD") {
                    currUpd = "UAH";
                    sumUpd = (sumDef * USDRateUAH).toFixed(2);
                } else if (currDef === "EUR") {
                    currUpd = "UAH";
                    sumUpd = ((sumDef / USDRateEUR) * USDRateUAH).toFixed(2);
                } else if (currDef === "UAH") {
                    currUpd = "UAH";
                    sumUpd = sumDef;
                }
                break;
        }

        $("#preloader").show();

        if ("#{salesOrderID}") {
            var data = {
                Email             : "#{email}",
                salesOrderID      : "#{salesOrderID}",
                productName       : "#{productName}",
                productPrice      : sumUpd,
                currency          : currUpd,
                redirectURL       : "#{redirectURL}",
                paymentDescription: 'Оплата продукта "#{productName}"',
                merchantID        : merchant || null,
                successLink       : "#{successLink}" || "",
                lang              : "#{lang}" || "ua"
            };

            axios({
                method: "post",
                url   : "/fondy/payment",
                data  : data
            })
                .then(function (response) {
                    $("#preloader").hide();

                    if (response.data.result && response.data.link) {
                        window.location = response.data.link;
                    } else if (response.data.error) {
                        console.error(response.data.error);
                    }
                });
        } else {
            var dealIDPay = getCookie("dealIDPay") || null;
            var contactID = getCookie("contactID") || null;

            var data2 = {
                "First_Name"  : "#{firstName}",
                "Email"       : "#{email}",
                "Phone"       : "#{phone}",
                "productName" : "#{productName}",
                "productID"   : "#{productID}",
                "productPrice": sumUpd,
                "currency"    : currUpd,
                "contactID"   : contactID,
                "dealID"      : dealIDPay
            };

            axios({
                method: "post",
                url   : "/sales_order",
                data  : data2
            })
                .then(function (response) {
                    var salesOrderID = response.data.salesOrderID.toString();

                    var data = {
                        Email             : "#{email}",
                        salesOrderID      : salesOrderID || null,
                        productName       : "#{productName}",
                        productPrice      : sumUpd,
                        currency          : currUpd,
                        redirectURL       : "#{redirectURL}",
                        paymentDescription: 'Оплата продукта "#{productName}"',
                        merchantID        : merchant || null,
                        successLink       : "#{successLink}" || "",
                        lang              : "#{lang}" || "ru"
                    };

                    axios({
                        method: "post",
                        url   : "/fondy/payment",
                        data  : data
                    })
                        .then(function (response) {
                            $("#preloader").hide();

                            if (response.data.result && response.data.link) {
                                window.location = response.data.link;
                            } else if (response.data.error) {
                                console.error(response.data.error);
                            }
                        });
                });
        }
    }

    // Plata logic
    function payPlata() {
        var token = "#{plataToken || ''}";
        var sumDef = parseFloat("#{productPrice}");
        var sumUpd = parseFloat("#{productPrice}");
        var currDef = "#{currency.toUpperCase()}";
        var currUpd = "#{currency.toUpperCase()}";

        var USDRateUAH = parseFloat("#{USDRateUAH}");
        var USDRateEUR = parseFloat("#{USDRateEUR}");

        //- switch (curr) {
        //-     case "usd":
        //-         if (currDef === "USD") {
        //-             currUpd = "USD";
        //-             sumUpd = sumDef;
        //-         } else if (currDef === "EUR") {
        //-             currUpd = "USD";
        //-             sumUpd = (sumDef * (1 / USDRateEUR)).toFixed(2);
        //-         } else if (currDef === "UAH") {
        //-             currUpd = "USD";
        //-             sumUpd = (sumDef * (1 / USDRateUAH)).toFixed(2);
        //-         } else if (currDef === "RUB") {
        //-             currUpd = "USD";
        //-             sumUpd = (sumDef * (1 / USDRateRUB)).toFixed(2);
        //-         }
        //-         break;

        //-     case "eur":
        //-         if (currDef === "USD") {
        //-             currUpd = "EUR";
        //-             sumUpd = (sumDef * USDRateEUR).toFixed(2);
        //-         } else if (currDef === "EUR") {
        //-             currUpd = "EUR";
        //-             sumUpd = sumDef;
        //-         } else if (currDef === "UAH") {
        //-             currUpd = "EUR";
        //-             sumUpd = ((sumDef / USDRateUAH) * USDRateEUR).toFixed(2);
        //-         } else if (currDef === "RUB") {
        //-             currUpd = "EUR";
        //-             sumUpd = ((sumDef / USDRateRUB) * USDRateEUR).toFixed(2);
        //-         }
        //-         break;

        //-     case "uah":
        //-         if (currDef === "USD") {
        //-             currUpd = "UAH";
        //-             sumUpd = (sumDef * USDRateUAH).toFixed(2);
        //-         } else if (currDef === "EUR") {
        //-             currUpd = "UAH";
        //-             sumUpd = ((sumDef / USDRateEUR) * USDRateUAH).toFixed(2);
        //-         } else if (currDef === "UAH") {
        //-             currUpd = "UAH";
        //-             sumUpd = sumDef;
        //-         } else if (currDef === "RUB") {
        //-             currUpd = "UAH";
        //-             sumUpd = ((sumDef / USDRateRUB) * USDRateUAH).toFixed(2);
        //-         }
        //-         break;
        //- }

        if (currDef === "USD") {
            currUpd = "UAH";
            sumUpd = (sumDef * USDRateUAH).toFixed(2);
        } else if (currDef === "EUR") {
            currUpd = "UAH";
            sumUpd = ((sumDef / USDRateEUR) * USDRateUAH).toFixed(2);
        } else if (currDef === "UAH") {
            currUpd = "UAH";
            sumUpd = sumDef;
        }

        if (sumUpd >= 50000) {
            $("#sumLimitPrevent").show();
            return;
        }

        $("#preloader").show();

        if ("#{salesOrderID}") {
            var data = {
                name              : "#{firstName}" + " " + "#{lastName}",
                phone             : "#{phone}",
                email             : "#{email}",
                salesOrderID      : "#{salesOrderID}",
                productName       : decodeURIComponent("#{productName}"),
                productPrice      : sumUpd,
                currency          : currUpd,
                redirectURL       : "#{redirectURL}",
                paymentDescription: 'Оплата продукта "#{productName}"',
                token             : token,
                lang              : "#{lang}" || "ua",
            };

            axios({
                method: "post",
                url   : "/plata/checkout",
                data  : data
            })
                .then(function (response) {
                    $("#preloader").hide();

                    if (response.data.result && response.data.pageUrl) {
                        window.location = response.data.pageUrl;
                    } else if (response.data.error) {
                        console.error(response.data.error);
                    }
                });
        } else {
            var dealIDPay = getCookie("dealIDPay") || null;
            var contactID = getCookie("contactID") || null;

            var data2 = {
                "First_Name"  : "#{firstName}",
                "Email"       : "#{email}",
                "Phone"       : "#{phone}",
                "productName" : decodeURIComponent("#{productName}"),
                "productID"   : "#{productID}",
                "productPrice": sumUpd,
                "currency"    : currUpd,
                "contactID"   : contactID,
                "dealID"      : dealIDPay
            };

            axios({
                method: "post",
                url   : "/sales_order",
                data  : data2
            })
                .then(function (response) {
                    var salesOrderID = response.data.salesOrderID.toString();

                    var data = {
                        email             : "#{email}",
                        salesOrderID      : salesOrderID || null,
                        productName       : decodeURIComponent("#{productName}"),
                        productPrice      : sumUpd,
                        currency          : currUpd,
                        redirectURL       : "#{redirectURL}",
                        paymentDescription: 'Оплата продукта "#{productName}"',
                        token             : token,
                        lang              : "#{lang}" || "ua",
                    };

                    axios({
                        method: "post",
                        url   : "/plata/checkout",
                        data  : data
                    })
                        .then(function (response) {
                            $("#preloader").hide();

                            if (response.data.result && response.data.pageUrl) {
                                window.location = response.data.pageUrl;
                            } else if (response.data.error) {
                                console.error(response.data.error);
                            }
                        });
                });
        }
    }


// WayForPay logic
script.
    var name = "#{firstName}" + " " + "#{lastName}";
    var productName = "#{productName}";
    var email = "#{email}";
    var phone = "#{phone}";
    var sum = $('#wfpForm [name="productPrice"]').val();
    var currency = $('#wfpForm [name="currency"]').val();
    var dealIDPay = getCookie("dealIDPay") || null;
    var contactID = getCookie("contactID") || null;
    var salesOrderID = "#{salesOrderID || ''}";
    var now = new Date();

    if (!dealIDPay) {
        dealIDPay = getParameterByName("DealID") || null;
    }

    if (!contactID) {
        contactID = getParameterByName("ContactID") || null;
    }

    $('#wfpForm [name="orderDate"]').val(now.getTime());

    generateSignature(() => {});

    function generateSignature(cb) {
        var baseString = getBaseString();

        $.ajax({
            url: '/wayforpay/generate_signature',
            data: { baseString: baseString },
        }).done(function(response) {
            if (response.result) {
                $('#wfpForm [name="merchantSignature"]').val(response.sign);
            } else {
                console.log("Error while creating WFP signature");
            }

            cb();
        });
    }

    function getBaseString() {
        var merchantAccount = $('#wfpForm [name="merchantAccount"]').val();
        var merchantDomainName = $('#wfpForm [name="merchantDomainName"]').val();
        var orderReference = $('#wfpForm [name="orderReference"]').val();
        var orderDate = $('#wfpForm [name="orderDate"]').val();
        var amount = $('#wfpForm [name="amount"]').val();
        var currency = $('#wfpForm [name="currency"]').val();

        var productName = '';
        $('#wfpForm [name="productName"]').each(function() {
            productName += ';' + $(this).val();
        });

        var productCount = '';
        $('#wfpForm [name="productCount"]').each(function() {
            productCount += ';' + $(this).val();
        });

        var productPrice = '';
        $('#wfpForm [name="productPrice"]').each(function() {
            productPrice += ';' + $(this).val();
        });

        var baseString =
            merchantAccount + ';' +
            merchantDomainName + ';' +
            orderReference + ';' +
            orderDate + ';' +
            amount + ';' +
            currency +
            productName +
            productCount +
            productPrice;

        return baseString;
    }

    function payWFP (data) {
        var wayforpay = new Wayforpay();
        
        wayforpay.run(
            data,
            function (response) {
                // on approved
                console.log('WFP approved', response);
                //- saveWFPResponse(response);
            },
            function (response) {
                // on declined
                console.log('WFP declined', response);
                //- saveWFPResponse(response);
            },
            function (response) {
                // on pending or in processing
                console.log('WFP pending', response);
                //- saveWFPResponse(response);
            }
        );
    }

    function saveWFPResponse (data) {
        axios({
            method: "post",
            url   : "/wayforpay/save_order",
            data  : data,
        })
            .then(function (response) {
                if (response.data && response.data.result) {
                    console.log("WFP order have been saved.");
                } else {
                    console.log("Error with WFP order saving.");
                }
            });
    }

    $('#wfpSubmit, #wfpSubmit2').on('click', function(e) {
        sum = $('#wfpForm [name="productPrice"]').val();
        currency = $('#wfpForm [name="currency"]').val();

        var USDRateUAH = parseFloat("#{USDRateUAH}");
        var USDRateEUR = parseFloat("#{USDRateEUR}");
        const sumUah = currency.toUpperCase() === "USD" ? (sum * USDRateUAH).toFixed(2) : currency.toUpperCase() === "EUR" ?  ((sum / USDRateEUR) * USDRateUAH).toFixed(2) : sum;

        if (sumUah >= 50000) {
            $("#sumLimitPrevent").show();
            return;
        }

        $("#preloader").show();

        var data = {
            "First_Name"  : "#{firstName}",
            "Email"       : "#{email}",
            "Phone"       : "#{phone}",
            "productName" : "#{productName}",
            "productID"   : "#{productID}",
            "productPrice": sum,
            "currency"    : currency,
            "contactID"   : contactID,
            "dealID"      : dealIDPay
        };

        axios({
            method: "post",
            url   : "/sales_order",
            data  : data
        })
            .then(function (response) {
                if (response.data && response.data.result) {
                    salesOrderID = response.data.salesOrderID.toString();
                    $('#wfpForm [name="orderReference"]').val(salesOrderID);

                    generateSignature(function() {
                        $('#wfpForm').submit();
                    });
                } else {
                    console.log(response.data.error);
                }

                $("#preloader").hide();
            });
    });

    $('#wfpForm').on('submit', async function(e) {
        e.preventDefault();

        var data = $(this).serializeArray().reduce(function(obj, item) {
            obj[item.name] = item.value;
            return obj;
        }, {});

        await axios({
            method: "post",
            url   : "/wayforpay/create_order",
            data  : { 
                name, 
                productName, 
                email,
                phone,
                amount: sum,
                currency,
                orderReference: $('#wfpForm [name="orderReference"]').val(), 
                transactionStatus: "Created", 
            },
        })
            .then(function (response) {
                if (response.data && response.data.result) {
                    console.log("WFP order created.");
                } else {
                    console.log("Error with WFP order creating.");
                }
            });

        payWFP(data);
    });

script.
    var $checkbox = $("#agreement-checkbox")
    $checkbox.on("click", function () {
        if ($("#agreement").prop("checked")) {
            $checkbox.removeClass("active");
            $(".steps-payways-item").removeClass("payway-disabled");   
        } else {
            $checkbox.addClass("active");
            $(".steps-payways-item").addClass("payway-disabled");
        }
    });
